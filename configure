#!/bin/bash
set -e
base=$(dirname $(readlink -f "$0"))
cores=$(nproc || echo 1)
err=0
required=("git" "make" "wget" "cmake" "g++" "doxygen")
for cmd in "${required[@]}"; do
	if ! command -v "$cmd" &> /dev/null; then
		echo "'$cmd' faltando. Favor instalar."
		err=1
	fi
done
if [ "$err" -eq 1 ]; then exit 1; fi

echo "Baixando dependencias"
read -p "Continuar? [S/n] " yn
if [[ $yn != [SsYy]* ]]; then
	exit 1
fi

temp=$(mktemp -d)
deps=$(mktemp -d -p $temp)
mkdir -p $deps/{lib,include}

download() {
	set -e
	git clone "$1" .
	git reset --hard "origin/$2"
	mkdir -p build && cd build && cmake ..
	make -j$cores
}
download_box2d() {
	dir=$(mktemp -d -p $temp) && cd $dir
	download "https://github.com/erincatto/box2d" "main"
	cp -r "$dir/include"/* "$deps/include"
	cp -r "$dir/build/bin"/* "$deps/lib"
}
download_sfml() {
	dir=$(mktemp -d -p $temp) && cd $dir
	download "https://github.com/SFML/SFML" "2.5.x"
	cp -r "$dir/include"/* "$deps/include"
	cp -r "$dir/build/lib"/* "$deps/lib"
}
download_candle() {
	dir=$(mktemp -d -p $temp) && cd $dir
	download "https://github.com/MiguelMJ/Candle" "master"
	mv "$dir/include"/* "$deps/include"
	mv "$dir/build/lib"/* "$deps/lib"
}
download_tmxlite() {
	dir=$(mktemp -d -p $temp) && cd $dir
	git clone "https://github.com/mateusvmv/tmxlite" .
	mkdir -p tmxlite/build && cd tmxlite/build
	cmake .. && make -j$cores
	mv "$dir/tmxlite/include"/* "$deps/include"
	mv "$dir/tmxlite/build"/*.so "$deps/lib"
}
abort() {
	echo "$@"
	rm -rf "$temp"
}

trap "abort Abortando" EXIT
download_sfml
export CPLUS_INCLUDE_PATH="$deps/include:$CPLUS_INCLUDE_PATH"
download_candle
download_box2d
download_tmxlite
wget -O "$deps/include/doctest.h" "https://github.com/doctest/doctest/releases/download/v2.4.11/doctest.h"

trap - EXIT
rm -rf "$base/deps"
mv "$deps" "$base/deps"
rm -rf "$temp"
echo "Sucesso"
